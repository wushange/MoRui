package cn.connxun.morui.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import cn.connxun.morui.entity.AllotUser;
import cn.connxun.morui.entity.Contacts;
import cn.connxun.morui.entity.Document;
import cn.connxun.morui.entity.Notice;
import cn.connxun.morui.entity.PlanDetail;
import cn.connxun.morui.entity.Task;
import cn.connxun.morui.entity.TaskSub;
import cn.connxun.morui.entity.Task_Allot;
import cn.connxun.morui.entity.User;

import cn.connxun.morui.db.AllotUserDao;
import cn.connxun.morui.db.ContactsDao;
import cn.connxun.morui.db.DocumentDao;
import cn.connxun.morui.db.NoticeDao;
import cn.connxun.morui.db.PlanDetailDao;
import cn.connxun.morui.db.TaskDao;
import cn.connxun.morui.db.TaskSubDao;
import cn.connxun.morui.db.Task_AllotDao;
import cn.connxun.morui.db.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig allotUserDaoConfig;
    private final DaoConfig contactsDaoConfig;
    private final DaoConfig documentDaoConfig;
    private final DaoConfig noticeDaoConfig;
    private final DaoConfig planDetailDaoConfig;
    private final DaoConfig taskDaoConfig;
    private final DaoConfig taskSubDaoConfig;
    private final DaoConfig task_AllotDaoConfig;
    private final DaoConfig userDaoConfig;

    private final AllotUserDao allotUserDao;
    private final ContactsDao contactsDao;
    private final DocumentDao documentDao;
    private final NoticeDao noticeDao;
    private final PlanDetailDao planDetailDao;
    private final TaskDao taskDao;
    private final TaskSubDao taskSubDao;
    private final Task_AllotDao task_AllotDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        allotUserDaoConfig = daoConfigMap.get(AllotUserDao.class).clone();
        allotUserDaoConfig.initIdentityScope(type);

        contactsDaoConfig = daoConfigMap.get(ContactsDao.class).clone();
        contactsDaoConfig.initIdentityScope(type);

        documentDaoConfig = daoConfigMap.get(DocumentDao.class).clone();
        documentDaoConfig.initIdentityScope(type);

        noticeDaoConfig = daoConfigMap.get(NoticeDao.class).clone();
        noticeDaoConfig.initIdentityScope(type);

        planDetailDaoConfig = daoConfigMap.get(PlanDetailDao.class).clone();
        planDetailDaoConfig.initIdentityScope(type);

        taskDaoConfig = daoConfigMap.get(TaskDao.class).clone();
        taskDaoConfig.initIdentityScope(type);

        taskSubDaoConfig = daoConfigMap.get(TaskSubDao.class).clone();
        taskSubDaoConfig.initIdentityScope(type);

        task_AllotDaoConfig = daoConfigMap.get(Task_AllotDao.class).clone();
        task_AllotDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        allotUserDao = new AllotUserDao(allotUserDaoConfig, this);
        contactsDao = new ContactsDao(contactsDaoConfig, this);
        documentDao = new DocumentDao(documentDaoConfig, this);
        noticeDao = new NoticeDao(noticeDaoConfig, this);
        planDetailDao = new PlanDetailDao(planDetailDaoConfig, this);
        taskDao = new TaskDao(taskDaoConfig, this);
        taskSubDao = new TaskSubDao(taskSubDaoConfig, this);
        task_AllotDao = new Task_AllotDao(task_AllotDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(AllotUser.class, allotUserDao);
        registerDao(Contacts.class, contactsDao);
        registerDao(Document.class, documentDao);
        registerDao(Notice.class, noticeDao);
        registerDao(PlanDetail.class, planDetailDao);
        registerDao(Task.class, taskDao);
        registerDao(TaskSub.class, taskSubDao);
        registerDao(Task_Allot.class, task_AllotDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        allotUserDaoConfig.clearIdentityScope();
        contactsDaoConfig.clearIdentityScope();
        documentDaoConfig.clearIdentityScope();
        noticeDaoConfig.clearIdentityScope();
        planDetailDaoConfig.clearIdentityScope();
        taskDaoConfig.clearIdentityScope();
        taskSubDaoConfig.clearIdentityScope();
        task_AllotDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
    }

    public AllotUserDao getAllotUserDao() {
        return allotUserDao;
    }

    public ContactsDao getContactsDao() {
        return contactsDao;
    }

    public DocumentDao getDocumentDao() {
        return documentDao;
    }

    public NoticeDao getNoticeDao() {
        return noticeDao;
    }

    public PlanDetailDao getPlanDetailDao() {
        return planDetailDao;
    }

    public TaskDao getTaskDao() {
        return taskDao;
    }

    public TaskSubDao getTaskSubDao() {
        return taskSubDao;
    }

    public Task_AllotDao getTask_AllotDao() {
        return task_AllotDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
